class shtg : Shotgun replaces Shotgun {

Default {
  Weapon.AmmoType2 "shtgcd"; //temporary
  DamageType "shtgdmg";
  }
	
	States {
		Select:
			SHTG A 1 A_Raise(10);
			loop;
		DeSelect:
			SHTG A 1 A_Lower(10);
			loop;
		
		Fire:
			SHTG A 0 A_Quake(3, 3, 0, 32, "");
			SHTG A 0 A_FireShotgun();
			SHTG A 1 Offset(0, 45);
			SHTG A 1 Offset(0, 60);
			SHTG A 1 Offset(0, 55);
			SHTG A 1 Offset(0, 50);
			SHTG A 1 Offset(0, 45);
			SHTG A 1 Offset(0, 40);
			SHTG A 1 Offset(0, 35);
		
		Pump:
			SHTG BC 5;
			SHTG D 4;
			SHTG CB 5;
			SHTG A 7 A_ReFire();
			goto Ready;
		
		//Start of AltFire states
		AltFire:
			SHTG A 0 A_JumpIfInventory("shtgcd", 1, "AltCancel"); //if cooldown
			SHTG A 0 A_JumpIfInventory("sac", 12, "AltReady");
			SHTG A 0 A_Quake(1, 3, 0, 32, "");
			SHTG A 1 A_GiveInventory("sac", 1);
			SHTG A 1 A_ReFire();
			SHTG A 0 A_SetInventory("sac", 0);
			goto Ready;
		AltReady:
			SHTG A 0 A_PlaySound("misc/w_pkup", CHAN_WEAPON); //plays sound to notify
			SHTG A 0 A_GiveInventory("scnt", 3);
		AltLoop:
			SHTG A 1 A_Quake(1, 3, 0, 32, ""); //added extra frame to not crash game
			SHTG A 1 A_ReFire("AltLoop");
		AltSht:
			SHTG A 0 A_Quake(3, 3, 0, 32, "");
			SHTG A 0 A_TakeInventory("Shell", 1);
			SHTG A 0 A_FireShotgun();
			SHTG A 1 Offset(0, 45);
			SHTG A 1 Offset(0, 60);
			SHTG A 1 Offset(0, 55);
			SHTG A 1 Offset(0, 50);
			SHTG A 0 A_TakeInventory("scnt", 1);
			SHTG A 0 A_JumpIfInventory("scnt", 1, "AltSht"); //loops 3 times
			SHTG A 1 Offset(0, 45);
			SHTG A 1 Offset(0, 40);
			SHTG A 1 Offset(0, 35);
			SHTG A 0 A_SetInventory("sac", 0);
			SHTG A 0 A_SetInventory("shtgcd", 3); //starts cooldown
			goto Pump;
			
		AltCancel:
			SHTG A 0 A_Print("Burst shot is on cooldown.");
			goto Ready;
		//End of AltFire states
	}
}

class sac : Ammo {
Default {
  Inventory.MaxAmount 12;
  }
}

class scnt : Inventory {
Default {
  Inventory.MaxAmount 3;
  }
}

class shtgcd : Ammo {
Default {
  Inventory.MaxAmount 999;
  }
}